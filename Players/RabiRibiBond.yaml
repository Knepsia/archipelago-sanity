# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: RabiBond

# Used to describe your yaml. Useful if you have multiple files.
description: Default Rabi-Ribi Template

game: Rabi-Ribi
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Rabi-Ribi:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  max_number_of_easter_eggs:
    # The maximum number of Easter Eggs that will be in the item pool.
    # If fewer available locations exist in the pool than this number, random potions will be removed to make space.
    # By default, 26 eggs can be placed before potions are removed;
    # with all locations enabled, there is space for 57 eggs.
    # Required Percentage of Easter Eggs will be calculated based off of this number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  percentage_of_easter_eggs:
    # What percentage of Easter Eggs are required to beat the game. Note that you will receive
    # the Rainbow Shot after 5 eggs no matter how many eggs are required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  encourage_eggs_in_late_spheres:
    # If set to true, the randomizer logic will attempt to place eggs in later spheres
    # resulting in harder to get to eggs.
    'false': 50
    'true': 0

  open_mode:
    # Gain access to Chapter 1 areas without needing to complete the prologue.
    # It is highly recommended to leave this enabled.
    'false': 0
    'true': 50

  apply_beginner_mod:
    # If set to true, applies an accessibility mod for new players.
    # This mod shows hidden paths and reveals breakable blocks.
    # Additionally, the mod fixes a few areas to prevent softlocks.
    'false': 50
    'true': 0

  attack_mode:
    # Normal attack mode starts you with 0 attack ups.
    # Super attack mode starts you with 20 attack ups.
    # Hyper attack mode starts you with 30 attack ups.
    # 
    # This gives you a lot more damage, which is especially useful because you often don't get
    # the hammer early in randomizer games. (Ribbon does about 20 damage per shot in super attack mode)
    normal: 50
    super: 0
    hyper: 0

  knowledge:
    # Knowledge can be BASIC, INTERMEDIATE, ADVANCED, or OBSCURE.
    # 
    # There are many tricks in the game that requires advanced knowledge of how the game works to perform.
    # Knowledge levels (mostly) align with the tricks explained on each section of the Platforming Tricks Tutorial custom map.
    # Obscure contains tricks that require incredibly specific game knowledge and may be scarcely documented, if at all.
    basic: 50
    intermediate: 0
    advanced: 0
    obscure: 0

  trick_difficulty:
    # Difficulty can be NORMAL, HARD, V_HARD, EXTREME, or STUPID.
    # 
    # Some tricks in Rabi-Ribi can be very difficult to execute. This flag determines the minimum execution ability required to complete the seed.
    # 
    # Normal is recommended for most players. There are many tight jumps which are still labeled as NORMAL.
    # Hard involves some tricks that are tight, and can be difficult to execute for newer players.
    # V_Hard involves some tricks that are very tight, and can be difficult to execute even for experienced players.
    # Extreme involves tricks that can be quite unreasonable to be expected to execute.
    # Stupid refers to tricks that no one wants to do, ever. This often refers to tricks that have only been performed successfully once, just to prove that it is possible.
    normal: 50
    hard: 0
    v_hard: 0
    extreme: 0
    stupid: 0

  block_clips_required:
    # Block clips are performed by quick-dropping onto the top of a one-tile block to obtain the item inside the block.
    # Turning off this flag removes the need for block clips.
    'false': 50
    'true': 0

  semi_solid_clips_required:
    # Semisolid Clips refers to clipping through semisolid
    # (one-way) platforms via a specific glitch. If this flag is turned on,
    # reaching some of the items may require semisolid clips to be performed.
    # If turned off, all the required items can be obtained without the need
    # for semisolid clips.
    'false': 50
    'true': 0

  zips_required:
    # Zips are glitches that allow you to clip through terrain.
    # The main types of zips are slide zips and hammer roll zips.
    # If this flag is turned on, reaching some of the items may require
    # zips to be performed. If turned off, all the required items can be
    # obtained without the need for zips.
    'false': 50
    'true': 0

  bunstrike_zips_required:
    # A bunstrike zip is an obscure zip method performed by using Bunny Strike.
    # If this flag is turned on, reaching some of the items may require
    # bunstrike zips to be performed. If turned off, all the required items
    # can be obtained without the need for bunstrike zips.
    'false': 50
    'true': 0

  boring_tricks_required:
    # If this flag is true, some of the items may require performing tricks
    # considered too boring or tedious to normally be included in logic.
    # Note that most of these tricks are still considered to be at least
    # Advanced knowledge and Very Hard difficulty at minimum.
    'false': 50
    'true': 0

  darkness_without_light_orb:
    # If this flag is true, the game might expect you to go into dark areas,
    # even if you don’t have the Light Orb.
    'false': 50
    'true': 0

  underwater_without_water_orb:
    # If this flag is true, the game might expect you to go into underwater areas,
    # even if you don’t have the Water Orb.
    'false': 50
    'true': 0

  carrot_shooter_in_logic:
    # If set to false, carrot shooter will not be required to bomb locations.
    # These locations will be locked behind carrot bomb instead.
    'false': 50
    'true': 0

  event_warps_in_logic:
    # If this flag is true, events that warp the player to another location are considered in logic.
    # While some of these events can only be reached once normally, the randomizer adds doors that
    # allow these events to be accessed multiple times.
    'false': 50
    'true': 0

  randomize_hammer:
    # If set to false, the hammer is at the default location
    'false': 50
    'true': 0

  randomize_gift_items:
    # If set to false, items given by NPCs (Speed Boost, Bunny Strike, P Hairpin) are at their default locations
    'false': 50
    'true': 0

  include_plurkwood:
    # If this flag is true, the game might expect you to go into Plurkwood.
    'false': 50
    'true': 0

  include_warp_destination:
    # If this flag is true, locations in the warp destination area are included in the pool.
    # Note that some of these locations may require beating the game to reach again if missed.
    'false': 50
    'true': 0

  include_post_game:
    # If this flag is true, locations only reachable in the post game are included in the pool.
    'false': 50
    'true': 0

  include_post_irisu:
    # If this flag is true, locations after beating Irisu are included in the pool.
    'false': 50
    'true': 0

  include_halloween:
    # If this flag is true, the Halloween DLC locations are included in the pool.
    # Requires the "Cinini's Halloween!" DLC.
    'false': 50
    'true': 0

  number_of_constraint_changes:
    # Sets the total number of map constraint changes to be added.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_map_transitions:
    # If this flag is true, the randomizer will shuffle the entrances between maps.
    'false': 50
    'true': 0

  shuffle_start_location:
    # If this flag is true, the randomizer will start the player at one of several locations
    # around Rabi Rabi Island.
    'false': 50
    'true': 0

  shuffle_music:
    # If this flag is true, the randomizer will shuffle the music tracks played in each area.
    'false': 50
    'true': 0

  shuffle_backgrounds:
    # If this flag is true, the randomizer will shuffle the room backgrounds in each area.
    # Note that some backgrounds that introduce lag or make tricks difficult to perform are disabled.
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []