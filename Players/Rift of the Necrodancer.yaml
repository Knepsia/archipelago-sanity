# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: RiftNCDSpring

# Used to describe your yaml. Useful if you have multiple files.
description: Default Rift of the Necrodancer Template

game: Rift of the Necrodancer
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Rift of the Necrodancer:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  dlc_songs:
    # Choose which DLC Packs will be included in the pool of chooseable songs.
    # Both individual songs and dlc pack names work.
    # 
    # Current DLC Pack Groups: ["Celeste", "Pizza Tower", "Hatsune Miku", "Hololive"]
    []

  starting_song_count:
    # The number of songs that will be unlocked from the start
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_song_count:
    # The total number of songs that will be placed in the randomization pool.
    # - This does not count any starting songs or the goal song.
    # - The final song count may be lower due to other settings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 2000
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  duplicate_song_percentage:
    # Percentage of duplicate songs to place in remaining filler slots.
    # Duplicate songs are considered Useful and thus out of logic.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  include_remix:
    # Adds remix mode songs as separate items and locations. When off, both normal and remix mode unlocks are the same.
    'false': 50
    'true': 0

  include_minigames:
    # Adds minigames to the song pool.
    # Split allows medium and hard variants to be shuffled separately.
    'false': 50
    'true': 0
    split: 0

  include_boss_battle:
    # Add boss battles to the song pool
    # Split allows medium and hard variants to be shuffled separately.
    'false': 50
    'true': 0
    split: 0

  min_intensity:
    # Ensures chosen rhythm rift will have a chart with an intensity value higher than this value (Rhythm Rifts only)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  max_intensity:
    # Ensures chosen rhythm rift will have a chart with an intensity value lower than this value (Rhythm Rifts only)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  min_difficulty:
    # Minimum difficulty level for intensity range for filtering (Rhythm Rifts only)
    # This setting will still allow any difficulty to be beaten to send a check
    easy: 50
    medium: 0
    hard: 0
    impossible: 0

  max_difficulty:
    # Maximum difficulty level for intensity range for filtering (Rhythm Rifts only)
    # This setting will still allow any difficulty to be beaten to send a check
    easy: 0
    medium: 0
    hard: 0
    impossible: 50

  grade_needed:
    # Not Yet Implemented
    # 
    # Required grade that needs to be achieved to send a check
    any: 50
    c: 0
    b: 0
    a: 0
    s: 0
    s_plus: 0

  diamond_count_percentage:
    # Percentage of filler item to be replaced with diamonds.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    80: 50
    random: 0
    random-low: 0
    random-high: 0

  diamond_win_percentage:
    # The percentage of diamonds in the item pool that are needed to unlock the winning song.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    80: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 0
    'true': 50

  include_songs:
    # These songs will be guaranteed to show up within the seed.
    # - You must have the DLC enabled to play those songs.
    # - Difficulty options will not affect these songs.
    # - If there are too many included songs, this will act as a whitelist ignoring song difficulty.
    []

  exclude_songs:
    # These songs will be guaranteed to not show up within the seed.
    # 
    # Note: Does not affect songs within the "Include Songs" list.
    []

  goal_song_pool:
    # Songs listed here will randomly chosen to be the final song.
    # If empty, the goal song will be chosen randomly from all included songs.
    []

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
